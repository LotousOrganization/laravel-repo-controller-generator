<?php

namespace {{ namespace }};

use App\Http\Controllers\Controller;
use App\Http\Resources\{{ model }}\Admin{{ model }}Resource;
use App\Models\{{ model }};
use Illuminate\Http\Request;
use App\Responses\ApiResponse;
use App\Repositories\Contracts\{{ model }}RepositoryInterface;
use App\Http\Requests\{{ path }}{{ model }}\Store{{ model }}Request;
use App\Http\Requests\{{ path }}{{ model }}\Update{{ model }}Request;
use SobhanAali\LaravelRepoControllerGenerator\Resources\Collection;

class {{ controller }} extends Controller
{
    public function __construct(public {{ model }}RepositoryInterface $repo){}

    /**
     * Display a listing of the resource.
     */
    public function index(Request $request)
    {
        ${{ modelVariable }}s = $this->repo->all($request);

        return ApiResponse::success(new Collection(${{ modelVariable }}s , '{{ modelVariable }}' , 'Admin{{ model }}Resource'));
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Store{{ model }}Request $request)
    {
        $this->repo->create($request);

        return ApiResponse::success();
    }

    /**
     * Display the specified resource.
     */
    public function show({{ model }} ${{ modelVariable }})
    {
        return ApiResponse::success(new Admin{{ model }}Resource(${{ modelVariable }}));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Update{{ model }}Request $request, {{ model }} ${{ modelVariable }})
    {
        $this->repo->update($request , ${{ modelVariable }});

        return ApiResponse::success();
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        $this->repo->delete(${{ modelVariable }});

        return ApiResponse::success();
    }
}